#JAVA

public class CAWSReqComp
{
	private double MarksPercentage;

	public CAWSReqComp(double MarksPercentage)
	{
		this.MarksPercentage = MarksPercentage;
	}
}

public class CAWSGetMarksAndCourseCount
{
	private String StudentID;
	private double TotalMarks;
	private int NumberOfCourses;

	public CAWSGetMarksAndCourseCount(String StudentID)
	{
		this.StudentID = StudentID;
		TotalMarks = 0.0;
		NumberOfCourses = 0;
	}

	public void process()
	{
		TotalMarks = 20.0;
		NumberOfCourses = 10;
	}
}

public CAWSGetMarksAndCourseCount GetMarksAndCourseCount(String StudentID)
{
	CAWSGetMarksAndCourseCount oCAWSGetMarksAndCourseCount = new CAWSGetMarksAndCourseCount(StudentID);
	oCAWSGetMarksAndCourseCount.process();
	return oCAWSGetMarksAndCourseCount;
}

public class CAWSCalcAverage
{
	private double TotalMarks;
	private int NumberOfCourses;
	private double AverageMarks;

	public CAWSCalcAverage(double TotalMarks, int NumberOfCourses)
	{
		this.TotalMarks = TotalMarks;
		this.NumberOfCourses = NumberOfCourses;
		AverageMarks = 0.0;
	}

	public void process()
	{
		AverageMarks = 20.0;
	}
}

public CAWSCalcAverage CalcAverage(double TotalMarks, int NumberOfCourses)
{
	CAWSCalcAverage oCAWSCalcAverage = new CAWSCalcAverage(TotalMarks, NumberOfCourses);
	oCAWSCalcAverage.process();
	return oCAWSCalcAverage;
}

public class CAWSCalcPercentage
{
	private double AverageMarks;
	private double MarksPercentage;

	public CAWSCalcPercentage(double AverageMarks)
	{
		this.AverageMarks = AverageMarks;
		MarksPercentage = 0.0;
	}

	public void process()
	{
		MarksPercentage = 20.0;
	}
}

public CAWSCalcPercentage CalcPercentage(double AverageMarks)
{
	CAWSCalcPercentage oCAWSCalcPercentage = new CAWSCalcPercentage(AverageMarks);
	oCAWSCalcPercentage.process();
	return oCAWSCalcPercentage;
}


#OBJECTIVELUCID

oCAWSMain @.g_StudentID "abc123" 
where
	dimension g_StudentID;

	oCAWSMain = CAWSReqComp(#.l_MarksPercentage)
					wvr CAWSReqCnstr
					@.l_MarksPercentage oCAWSCalcPercentage.MarksPercentage
					where
						dimension l_MarksPercentage;
						CAWSReqCnstr = true;

						oCAWSGetMarksAndCourseCount = GetMarksAndCourseCount(#.l_StudentID)
									wvr c_GetMarksAndCourseCount
									@.l_StudentID #.g_StudentID
									where
										dimension l_StudentID;
										c_GetMarksAndCourseCount = true;
									end;

						oCAWSCalcAverage = CalcAverage(#.l_TotalMarks, #.l_NumberOfCourses)
									wvr c_CalcAverage
									@.l_NumberOfCourses oCAWSGetMarksAndCourseCount.NumberOfCourses 
									@.l_TotalMarks oCAWSGetMarksAndCourseCount.TotalMarks
									where
										dimension l_NumberOfCourses, l_TotalMarks;
										c_CalcAverage = #.l_NumberOfCourses >= 1;
									end;

						oCAWSCalcPercentage = CalcPercentage(#.l_AverageMarks)
									wvr c_CalcPercentage
									@.l_AverageMarks oCAWSCalcAverage.AverageMarks
									where
										dimension l_AverageMarks;
										c_CalcPercentage = #.l_AverageMarks <= 100.0;
									end;
					end;
end