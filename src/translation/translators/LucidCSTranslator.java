package translation.translators;

import java.util.List;
import service.Service;
import translation.readers.csconfigreaders.CSConfiguration;
import utilities.LogUtil;
import utilities.ReadWriteUtil;

/**
 * Concrete translator for generating an Objective Lucid program for a layered composite service.
 * @author Jyotsana Gupta
 */
public class LucidCSTranslator implements CompositeServiceTranslator
{
	/**
	 * Method for translating a given layered composite service into an Objective Lucid program.
	 * @param 	compSvcConfig	Composite service configuration containing information required for the translation
	 * @param 	logger			Logging utility object for logging error or status messages to a text file
	 * @return	Complete name and path of the Objective Lucid program file generated by this translator
	 */
	public String generateFormalLangCode(CSConfiguration compSvcConfig, LogUtil logger)
	{
		boolean csInpValid = TranslatorUtil.validateInpValues(compSvcConfig.getInputDetails(), logger);
		if (csInpValid)
		{
			String csLucidFileName = compServiceToObjLucid(compSvcConfig);
			return csLucidFileName;
		}
		else
		{
			return null;
		}
	}
	
	/**
	 * Method for sequentially triggering the phases involved in generation of an Objective Lucid program for a composite service.
	 * @param 	compSvcConfig	Composite service configuration received from the user
	 * @return	Complete name and path of the file containing the target Objective Lucid program
	 */
	private String compServiceToObjLucid(CSConfiguration compSvcConfig)
	{
		//Getting details required for translation from the given configuration
		Service compService = compSvcConfig.getCompositeService();
		List<String[]> compSvcInputs = compSvcConfig.getInputDetails();		
		
		//Triggering the Lucid code generation
		String javaSegment = JavaCodeGenerator.generateJavaSegment(compService);
		String objLucidSegment = ObjLucidCodeGenerator.generateObjLucidSegment(compService, compSvcInputs);
		String lucidProgram = javaSegment + "\n\n\n" + objLucidSegment;
		
		//Writing Lucid code to a file
		String csLucidFileName = compSvcConfig.getDestinationFolder() + "CSLucid_" + compSvcConfig.getCompositeService().getName() + ".ipl";
		ReadWriteUtil.writeToTextFile(csLucidFileName, lucidProgram);
				
		return csLucidFileName;
	}
}